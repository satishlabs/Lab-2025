<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Move element &apos;Eat.java&apos; to &apos;MS/src/com.zoo.interfaces&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Destination element: &apos;MS/src/com.zoo.interfaces&apos;&#x0D;&#x0A;- Original element: &apos;com.zoo.Eat.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;com.zoo.interfaces" element1="/src&lt;com.zoo{Eat.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1755669615145" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;list1.stream().filter(list2::contains).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;com.jdk8.stream.CommonElementsWithStream.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;list1.stream().filter(list2::contains).collect(Collectors.toList())&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.jdk8.stream{CommonElementsWithStream.java" name="collect" replace="true" replaceAllInThisFile="false" selection="375 80" stamp="1755773691542" varType="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;MS&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Original element: &apos;com.oops.withoutcovariant.Animal.java&apos;" description="Delete element" element1="/src&lt;com.oops.withoutcovariant{Animal.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1755840942214" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;MS&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Original element: &apos;MS/src/com.oops.withoutcovariant&apos;" description="Delete element" element1="/src&lt;com.oops.withoutcovariant" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1755841322820" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Copy element &apos;WithoutCovariantTest.java&apos; to &apos;MS/src/com.oops.covariant&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Destination element: &apos;MS/src/com.oops.covariant&apos;&#x0D;&#x0A;- Original element: &apos;com.oops.covariant.WithoutCovariantTest.java&apos;" description="Copy compilation unit" destination="/src&lt;com.oops.covariant" element1="/src&lt;com.oops.covariant{WithoutCovariantTest.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1755841335313" units="1" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;collect&apos; from expression &apos;Stream.concat(list1.stream(),list2.stream()).collect(Collectors.toMap(EmployeeDetails::getEmpId,e -&gt; e,(e1,e2) -&gt; e1))&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Variable name: &apos;collect&apos;&#x0D;&#x0A;- Destination method: &apos;com.file.FileOpertations.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;Stream.concat(list1.stream(),list2.stream()).collect(Collectors.toMap(EmployeeDetails::getEmpId,e -&gt; e,(e1,e2) -&gt; e1))&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;collect&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.file{FileOpertations.java" name="collect" replace="true" replaceAllInThisFile="false" selection="522 125" stamp="1755849561223" varType="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;first&apos; from expression &apos;map.entrySet().stream().filter(e -&gt; e.getValue() &gt; 1).map(e -&gt; e.getKey()).findFirst()&apos;&#x0D;&#x0A;- Original project: &apos;MS&apos;&#x0D;&#x0A;- Variable name: &apos;first&apos;&#x0D;&#x0A;- Destination method: &apos;com.map.NonRepeatedOrRepeatedCharInString.main(...)&apos;&#x0D;&#x0A;- Variable expression: &apos;map.entrySet().stream().filter(e -&gt; e.getValue() &gt; 1).map(e -&gt; e.getKey()).findFirst()&apos;&#x0D;&#x0A;- Replace occurrences of expression with variable" description="Extract local variable &apos;first&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/src&lt;com.map{NonRepeatedOrRepeatedCharInString.java" name="first" replace="true" replaceAllInThisFile="false" selection="509 99" stamp="1755856381243" varType="false" version="1.0"/>
</session>