package com.ds.dl;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;

public class LevelOrderTraversal {
	public static void main(String[] args) {
		Node root = new Node(1);
		root.left = new Node(2);
		root.right = new Node(3);
		root.left.left = new Node(4);
		root.left.right = new Node(5);
		root.right.left = new Node(6);
		root.right.right = new Node(7);
		
		List<List<Integer>> traversal = leverOrder(root);
		System.out.println(traversal);
	}

	private static List<List<Integer>> leverOrder(Node root) {
	List<List<Integer>> result = new ArrayList<List<Integer>>();
	if(root == null)
		return result;
	
	Queue<Node> queue = new LinkedList<Node>();
	queue.offer(root);
	
	while(!queue.isEmpty()) {
		int size = queue.size();
		List<Integer> level = new ArrayList<Integer>();
		
		for(int i=0; i<size; i++) {
			Node node = queue.poll();
			level.add(node.data);
		}
	}
		return null;
	}
}
